    'use strict';
    //Задание 1
  
    let a = 1, b = 1, c, d;
    c = ++a;
    alert(c); // Здесь ответ будет 2, так как префиксная форма инкремента, поэтому сначала 1, а в переменную уже будет а=2, так будет сначало увеличение на один
    //пример 2
    d = b++;
    alert(d); //Здесь будет ответ равен 1, так как постфиксная форма инкремента, сначало будет присвоено число 1 потом будет увеличение 
    //пример 3
    c = 2 + ++a;
    alert(c); //Здесь будет ответ равен 5, так как переменная а уже равна 2, по приоритету выполнения операции у нас идет инкремент потом сложение, у нас префиксная форма инкремента, поэтому будет увеличение и а=3, потом  прибавляем 2  и в переменную с присвоим значение 5
    //пример 4
    d = 2 + b++; 
    alert(d); // Здесь постфиксная форма инкремента, пэтому d будет равна 4, так как будет присвоено значение перменной b равное 2 потом прибавляем 2 и получеам 4
    alert(a); //Здесь ответ 3, так  уже произошло увеличение на 1 еденицу....
    alert(b); // Здесь тоже ответ 3, так как после постфиксной формы инкремента переменная b будет уже равна 3 

    // Задание 2

    let m = 2;
    let x = 1 + (m *= 2); // В данном примере будем выполнять сначало что находится в скобках, так как переменная а равна 2, то в скобках перемення а уже будет равна 4 (a*=2 равно a=a*2), потом производим сложение и уже перменная x равна  x = 1 + 4 = 5. Отсюда следует, что в переменную a попадет значение 4, а в переменную c попадет значение 5
    alert(m);
    alert(x);

    // Задание 3
    let n = +prompt("Введите первое целое  число"),
        k = +prompt("Введите второе целое  число");

        /**
         * Анонимная функция, которая выполняет то или иное выражение, в зависимости от полученных аргументов от пользователя
         * @param {number} n  Число,которое задает пользователь
         * @param {number} k  Число,которое задает пользователь
         * @returns  {number}
         */

    let result = function(n, k) {  
        if (n > 0 && k > 0) {
            return n - k
            
        } else if (n < 0 && k < 0) {
            return n * k
        } else {
            return n + k
        }     

    };
    alert(result(n,k)); // Вызываем после создания функции 


    // Задание 4 

    /**
     * Вовзаращает сумму
     * @param {number} w
     * @param {number} q
     * @returns {number}
     */
function summ(w, q) {
    let w = +prompt('Введите первое число')
    let q = +prompt('Введите второе число')
        return w + q;
}

alert(`Сумма равна ${summ()}`);
   
    /**
     * Возвращает разность
     * @param {number} a 
     * @param {number} b 
     * @returns {number}
     */

function difference(a, b) {
         let a = +prompt('Введите первое число')
         let b = +prompt('Введите второе число')
        return a - b;
}
   alert(`Разность равна ${difference()}`);
    /**
     * Возвращает деление
     * @param {number} a 
     * @param {number} b 
     * @returns {number}
     */
function division(a, b) {
         let a = +prompt('Введите первое число')
         let b = +prompt('Введите второе число')
        if (b === 0) return a
        else return a / b;
}
     alert(`Деление двух чисел равно ${division()}`);
    
    /**
     * Возвращает произведение
     * @param {number} a 
     * @param {number} b 
     * @returns {number}
     */
function multiply(a, b) {
         let a = +prompt('Введите первое число')
         let b = +prompt('Введите второе число')
        return a * b;
}
    alert(`Произведение двух чисел равно ${multiply()}`);

    //Задание 5
    let arg1 = +prompt("Введите первое целое  число"),
        arg2 = +prompt("Введите второе целое  число"),
        operation = prompt("Введите математическую операцию, подсказка (+-/*)");
        mathOperation(arg1, arg2,operation);

        /**
         * Функция возвращает выражение в зависимости от выбранной метематической операции +-/*
         * @param {number} arg1 Аргумент, введенный пользователем
         * @param {number} arg2 Аргумент, введенный пользователем
         * @param {operation} operation Математичсекая операция
         * @returns {number} Возвращает результат выражения
         */

    function mathOperation(arg1, arg2,operation) {
    
    switch(operation){
        case "+"  :
        alert("Сумма двух чисел = " + " " + summ(arg1, arg2));
        break;
        case "*" :
        alert("Произведение двух чисел = " + " " + multiply(arg1, arg2));
        break;
        case "/":
        alert("Деление двух чисел = " + " " + division(arg1, arg2));
    break;
    case "-":
    alert("Разность двух чисел = " + " " + difference(arg1, arg2));
    break;
    default:
    alert("Введено не корректное значение операции.Попробуйте еще раз");
    break;
        
    }
    }

    // Задание 6*

    /**
     * Функция возвращает слово в правильном падиже, в зависимсоти от введенной суммы денег
     * @param {number} value Вводим необходимую сумму и преобразуем ее к абсалютному числу и находим остаток
     * @param {number} num  Делаем дополнительную проверку для введенного числа, находим остаток от полученного остатка 
     * @param {Array} words  Передаем необходимый массив из нужных слов
     * @returns {string} Получаем необходимое слово из функции
     */
    function generateWords(value, words){  
        value = Math.abs(value) % 100; 
        var num = value % 10;  
        if(value > 10 && value < 20) return words[2]; 
        // if (value > 1 && value < 5) return words[1];
        else if (num > 1 && num < 5) return words[1];
        else if (value == 1) return words[0];
        else  return words[2];	
    }

    let value = null;
    let word = null;
    
    while (true) {
        value = +prompt("Введите сумму денег, которую хотели бы зачислить на счет");        
        if (value === 0 || isNaN(value) || value === '') {
            alert("Введите корректное значение")      
            
        } else {
            word = generateWords(value, ['рубль', 'рубля', 'рублей']); // передаем значение с нужным нам массивом слов
            alert(`Вам на счет будет зачислено ${value}  ${word}`);
            break;
            
        }
    }
    
                  // Второй вариант 
   

                let money = +prompt('Какую сумму Вы хотите положить на счёт в банке?');
                if (isNaN(money)) {
                alert('Введена некорректная сумма. Введите числовое значение.');
                }
                let rubles = '';  // создаем пустую строку, в которую будем помещать нужное нам слово          
                let number = Math.abs(money) % 100; // получаем остаток суммы
                let last = money % 10; // получаем остаток числа
                if (number > 10 && number < 20) { // сравниваем остаток
                    rubles = 'рублей';               

                } else if (last > 1 && last < 5) { 
                    rubles = 'рубля';
                } else if (number == 1) {
                    rubles = 'рубль';
                    
                } else {
                    rubles = 'рублей';
                }
               alert(`Ваша сумма в ${money} ${rubles} успешно зачислена.`);


                
              
               


            // 
            // } else {
            //     switch (last) {
            //         case 1:
            //             rubles = 'рубль';
            //             break;
            //         case 2:
            //         case 3:
            //         case 4:
            //             rubles = 'рубля';
            //             break;
            //         case 5:
            //         case 6:
            //         case 7:
            //         case 8:
            //         case 9:
            //         case 0:
            //             rubles = 'рублей';
            //             break;
            //     }
                
            